;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 5/23/2022
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32A
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <string.h>
;#include <eeprom.h>
;#include <stdio.h>
;#include <stdint.h>
;#include <alcd.h>  // Alphanumeric LCD functions
;
;// Declare your global variables here
;#define New PORTA.0
;#define Correct PORTA.1
;#define Wrong PORTA.2
;#define led4 PORTA.3
;#define input1 PINA.4
;#define input2 PINA.5
;#define input3 PINA.6
;#define input4 PINA.7
;
;
;int keydetect = 0;
;char input;
;eeprom char password[16];
;eeprom char length;
;char count = 0;
;char i = 0;
;int flag = 0;
;char Falling = 0 ;
;int mode =0;
;int save_mode=0;
;int flagoo=0;
;
;void setKey()
; 0000 0038 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0039     switch (PINA & 0xF0)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 003A     {
; 0000 003B     case (0x10):
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 003C         lcd_puts("1");
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 003D         password[count] = '1';
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 003E         break;
;PCODE: $0000001B VOL: 0
; 0000 003F 
; 0000 0040     case (0x20):
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0041         lcd_puts("2");
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0042         password[count] = '2';
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0043         break;
;PCODE: $00000027 VOL: 0
; 0000 0044 
; 0000 0045     case (0x30):
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0046         lcd_puts("3");
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0047         password[count] = '3';
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0048         break;
;PCODE: $00000033 VOL: 0
; 0000 0049 
; 0000 004A     case (0x40):
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 004B         lcd_puts("4");
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 004C         password[count] = '4';
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 004D         break;
;PCODE: $0000003F VOL: 0
; 0000 004E 
; 0000 004F     case (0x50):
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0050         lcd_puts("5");
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0051         password[count] = '5';
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0052         break;
;PCODE: $0000004B VOL: 0
; 0000 0053 
; 0000 0054     case (0x60):
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0055         lcd_puts("6");
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0056         password[count] = '6';
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0057         break;
;PCODE: $00000057 VOL: 0
; 0000 0058 
; 0000 0059     case (0x70):
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 005A         lcd_puts("7");
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 005B         password[count] = '7';
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 005C         break;
;PCODE: $00000063 VOL: 0
; 0000 005D 
; 0000 005E     case (0x80):
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 005F         lcd_puts("8");
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0060         password[count] = '8';
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0061         break;
;PCODE: $0000006F VOL: 0
; 0000 0062 
; 0000 0063     case (0x90):
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0064         lcd_puts("9");
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0065         password[count] = '9';
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0066         break;
;PCODE: $0000007B VOL: 0
; 0000 0067 
; 0000 0068     case (0xA0):
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0069         lcd_puts("0");
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 006A         password[count] = '0';
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 006B         break;
;PCODE: $00000087 VOL: 0
; 0000 006C 
; 0000 006D     case (0xB0):
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 006E         lcd_puts("*");
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 006F         password[count] = '*';
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0070         flag = 2;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0071         break;
;PCODE: $00000095 VOL: 0
; 0000 0072 
; 0000 0073     case (0xC0):
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0074         lcd_puts("#");
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0075         password[count] = '#';
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0076         break;
;PCODE: $000000A1 VOL: 0
; 0000 0077 
; 0000 0078     default:
;PCODE: $000000A2 VOL: 0
; 0000 0079         break;
;PCODE: $000000A3 VOL: 0
; 0000 007A     }
;PCODE: $000000A4 VOL: 0
; 0000 007B 
; 0000 007C }
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0

	.DSEG
_0x7:
	.BYTE 0x18
;
;
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0082 {

	.CSEG
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0083 // Place your code here
; 0000 0084     keydetect = 1;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0085     delay_ms(50);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0086 
; 0000 0087 }
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 008B {
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 008C     save_mode=1;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 008D     New=1;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 008E }
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;// External Interrupt 2 service routine
;interrupt [EXT_INT2] void ext_int2_isr(void)
; 0000 0091 {
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0092     save_mode=0;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0093     New=0;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0094     flagoo=1;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0095     flag=1;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0096 
; 0000 0097 }
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;
;void main(void)
; 0000 009A {
;PCODE: $000000C7 VOL: 0
; 0000 009B // Declare your local variables here
; 0000 009C 
; 0000 009D // Input/Output Ports initialization
; 0000 009E // Port A initialization
; 0000 009F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 00A0     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00A1 // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 00A2     PORTA=(1<<PORTA7) | (1<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00A3 
; 0000 00A4 // Port B initialization
; 0000 00A5 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00A6     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 00A7 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00A8     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00A9 
; 0000 00AA // Port C initialization
; 0000 00AB // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00AC     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00AD // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00AE     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 00AF 
; 0000 00B0 // Port D initialization
; 0000 00B1 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00B2     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00B3 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00B4     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00B5 
; 0000 00B6 // External Interrupt(s) initialization
; 0000 00B7 // INT0: On
; 0000 00B8 // INT0 Mode: Rising Edge
; 0000 00B9 // INT1: On
; 0000 00BA // INT1 Mode: Rising Edge
; 0000 00BB // INT2: On
; 0000 00BC // INT2 Mode: Falling Edge
; 0000 00BD     GICR|=(1<<INT1) | (1<<INT0) | (1<<INT2);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00BE     MCUCR=(1<<ISC11) | (1<<ISC10) | (1<<ISC01) | (1<<ISC00);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00BF     MCUCSR=(0<<ISC2);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00C0     GIFR=(1<<INTF1) | (1<<INTF0) | (1<<INTF2);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00C1 
; 0000 00C2 // Alphanumeric LCD initialization
; 0000 00C3 // Connections are specified in the
; 0000 00C4 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00C5 // RS - PORTC Bit 0
; 0000 00C6 // RD - PORTC Bit 1
; 0000 00C7 // EN - PORTC Bit 2
; 0000 00C8 // D4 - PORTC Bit 4
; 0000 00C9 // D5 - PORTC Bit 5
; 0000 00CA // D6 - PORTC Bit 6
; 0000 00CB // D7 - PORTC Bit 7
; 0000 00CC // Characters/line: 16
; 0000 00CD     lcd_init(16);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00CE 
; 0000 00CF // Global enable interrupts
; 0000 00D0 #asm("sei")
;PCODE: $000000E3 VOL: 0
	sei
;PCODE: $000000E4 VOL: 0
; 0000 00D1 
; 0000 00D2     while (1)
;PCODE: $000000E5 VOL: 0
; 0000 00D3       {if (save_mode==0)
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00D4       {
; 0000 00D5         if(i==0){
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00D6         lcd_clear();
;PCODE: $000000EB VOL: 0
; 0000 00D7         lcd_gotoxy(0,0);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00D8         lcd_puts("Enter Password:");
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00D9         lcd_gotoxy(0,1);
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00DA         delay_ms(200);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00DB         }
; 0000 00DC         if (keydetect==1)
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00DD         {
; 0000 00DE          keydetect = 0;
;PCODE: $000000FE VOL: 0
; 0000 00DF          switch (PINA & 0xF0)
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00E0                 {
; 0000 00E1                     case (0x10):
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00E2                     lcd_puts("1");
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00E3                     input= '1';
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00E4                     break;
;PCODE: $00000108 VOL: 0
; 0000 00E5 
; 0000 00E6                     case (0x20):
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00E7                     lcd_puts("2");
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00E8                     input= '2';
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00E9                     break;
;PCODE: $00000111 VOL: 0
; 0000 00EA 
; 0000 00EB                     case (0x30):
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00EC                     lcd_puts("3");
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00ED                     input= '3';
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00EE                     break;
;PCODE: $0000011A VOL: 0
; 0000 00EF 
; 0000 00F0                     case (0x40):
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00F1                     lcd_puts("4");
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00F2                     input= '4';
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00F3                     break;
;PCODE: $00000123 VOL: 0
; 0000 00F4 
; 0000 00F5                     case (0x50):
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00F6                     lcd_puts("5");
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00F7                     input= '5';
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00F8                     break;
;PCODE: $0000012C VOL: 0
; 0000 00F9 
; 0000 00FA                     case (0x60):
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00FB                     lcd_puts("6");
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00FC                     input= '6';
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00FD                     break;
;PCODE: $00000135 VOL: 0
; 0000 00FE 
; 0000 00FF                     case (0x70):
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 0100                     lcd_puts("7");
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0101                     input= '7';
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 0102                     break;
;PCODE: $0000013E VOL: 0
; 0000 0103 
; 0000 0104                     case (0x80):
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 0105                     lcd_puts("8");
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0106                     input= '8';
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0107                     break;
;PCODE: $00000147 VOL: 0
; 0000 0108 
; 0000 0109                     case (0x90):
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 010A                     lcd_puts("9");
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 010B                     input= '9';
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 010C                     break;
;PCODE: $00000150 VOL: 0
; 0000 010D 
; 0000 010E                     case (0xA0):
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 010F                     lcd_puts("0");
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0110                     input ='0';
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 0111                     break;
;PCODE: $00000159 VOL: 0
; 0000 0112 
; 0000 0113                     case (0xB0):
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0114                     input= '*';
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 0115                     flag = 2;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 0116                     break;
;PCODE: $00000161 VOL: 0
; 0000 0117 
; 0000 0118                     case (0xC0):
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0119                     input='\0';
;PCODE: $00000165 VOL: 0
; 0000 011A                     flag = 1;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 011B                     break;
;PCODE: $00000168 VOL: 0
; 0000 011C 
; 0000 011D                     default:
;PCODE: $00000169 VOL: 0
; 0000 011E                     break;
;PCODE: $0000016A VOL: 0
; 0000 011F                 }
;PCODE: $0000016B VOL: 0
; 0000 0120                 if ( flag == 2){
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0121                     i = 0;
;PCODE: $0000016F VOL: 0
; 0000 0122                     break;
;PCODE: $00000170 VOL: 0
; 0000 0123                 }
; 0000 0124                 if(password[i] == input)
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 0125                 {
; 0000 0126                     i = i+1;
;PCODE: $00000178 VOL: 0
; 0000 0127                    if ( i  == length)
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0128                      {
; 0000 0129                      lcd_clear();
;PCODE: $0000017D VOL: 0
; 0000 012A                      lcd_puts("Unlocked");
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 012B                      Correct = 1;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 012C                      delay_ms(2000);
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 012D                      Correct = 0;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 012E                      i = 0 ;
;PCODE: $00000187 VOL: 0
; 0000 012F                      }
; 0000 0130 
; 0000 0131                 }else{
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 0132                     lcd_clear();
;PCODE: $0000018B VOL: 0
; 0000 0133                     lcd_puts("Wrong");
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 0134                     Wrong = 1 ;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0135                     delay_ms(2000);
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0136                     Wrong = 0 ;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0137                     i=0;
;PCODE: $00000195 VOL: 0
; 0000 0138                 }
;PCODE: $00000196 VOL: 0
; 0000 0139          }
; 0000 013A 
; 0000 013B         } if (save_mode==1){
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 013C 
; 0000 013D                 delay_ms(2000);
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 013E                 New = 1;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 013F                 lcd_clear();
;PCODE: $000001A0 VOL: 0
; 0000 0140                 delay_ms(100);
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 0141                 lcd_gotoxy(0,0);
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 0142                 lcd_puts("New Password:");
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 0143                 lcd_gotoxy(0,1);
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 0144                 while(1){
;PCODE: $000001AF VOL: 0
; 0000 0145 
; 0000 0146                    if (flag==0){
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 0147                         if (keydetect==1){
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 0148                             keydetect=0;
;PCODE: $000001B5 VOL: 0
; 0000 0149                             setKey();
;PCODE: $000001B6 VOL: 0
; 0000 014A                             count++;
;PCODE: $000001B7 VOL: 0
; 0000 014B                         }
; 0000 014C                    }
;PCODE: $000001B8 VOL: 0
; 0000 014D                    else{
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 014E                         if (count!=0)
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 014F                         {
; 0000 0150                         lcd_clear();
;PCODE: $000001BD VOL: 0
; 0000 0151                         lcd_puts("Password Saved");
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 0152                         }
; 0000 0153                         input = '\0';
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 0154                         flag=0;
;PCODE: $000001C3 VOL: 0
; 0000 0155                         length = count;
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 0156                         count=0;
;PCODE: $000001C7 VOL: 0
; 0000 0157                         delay_ms(3000);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 0158                         break;
;PCODE: $000001CA VOL: 0
; 0000 0159                    }
;PCODE: $000001CB VOL: 0
; 0000 015A 
; 0000 015B                 }
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 015C 
; 0000 015D             New=0;
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 015E 
; 0000 015F         }
; 0000 0160       }
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 0161 }
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0

	.DSEG
_0x1D:
	.BYTE 0x50
